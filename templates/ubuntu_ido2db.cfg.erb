#In /etc/icinga/ido2db.cfg
#Perms are -rw------- 1 nagios nagios

# DATABASE SERVER TYPE
# This option determines what type of DB server the daemon should
# connect to.
# Values:
#   mysql    = MySQL
# pgsql    = PostgreSQL
# db2      = DB2
# firebird = Firebird
# freetds  = FreeTDS
# ingres   = Ingres
# msql     = MSSQL
# oracle   = Oracle
# sqlite   = SQLite
# sqlite3  = SQLite3
# Currently supported:
# libdbi: mysql, pgsql
# ocilib: oracle
db_servertype=<%= scope.lookupvar('icinga::params::server_db_type') %>

# DATABASE HOST
# This option specifies what host the DB server is running on.
# Note: Oracle will ignore this setting
db_host=<%= scope.lookupvar('icinga::params::server_db_host') %>
# DATABASE PORT
# This option specifies the port that the DB server is running on.
# Values:
#   3306 = Default MySQL port
# 5432 = Default PostgreSQL port
#       1521 = Default Oracle port
#
# Note: ocilib will ignore this, you have to modify your tnsnames.ora

db_port=<%= scope.lookupvar('icinga::params::server_db_port') %>

# DATABASE NAME
# This option specifies the name of the database that should be used.
#
# Note: Oracle with ocilib requires tnsnames.ora filled with host, port
# and database information. you can use the SID then with ocilib and
# one of the following:
#   //DBSERVER/SID
# SID

db_name=<%= scope.lookupvar('icinga::params::server_db_name') %>



# DATABASE TABLE PREFIX
# Determines the prefix (if any) that should be prepended to table names.
# If you modify the table prefix, you'll need to modify the SQL script for
# creating the database!
#
# Note: Oracle will ignore this prefix since the tablename length will exceed
# 30 characters.

db_prefix=icinga_

# DATABASE USERNAME/PASSWORD
# This is the username/password that will be used to authenticate to the DB.
# The user needs at least SELECT, INSERT, UPDATE, and DELETE privileges on
# the database.

db_user=<%= scope.lookupvar('icinga::params::server_db_user') %>
db_pass=<%= scope.lookupvar('icinga::params::server_db_password') %>